// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChangeApproveStatus extends ethereum.Event {
  get params(): ChangeApproveStatus__Params {
    return new ChangeApproveStatus__Params(this);
  }
}

export class ChangeApproveStatus__Params {
  _event: ChangeApproveStatus;

  constructor(event: ChangeApproveStatus) {
    this._event = event;
  }

  get appId(): string {
    return this._event.parameters[0].value.toString();
  }

  get receipeId(): string {
    return this._event.parameters[1].value.toString();
  }

  get signId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get approveStatus(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class SignContractCreated extends ethereum.Event {
  get params(): SignContractCreated__Params {
    return new SignContractCreated__Params(this);
  }
}

export class SignContractCreated__Params {
  _event: SignContractCreated;

  constructor(event: SignContractCreated) {
    this._event = event;
  }

  get appId(): string {
    return this._event.parameters[0].value.toString();
  }

  get receipeId(): string {
    return this._event.parameters[1].value.toString();
  }

  get signId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[3].value.toString();
  }

  get required(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get uri(): string {
    return this._event.parameters[5].value.toString();
  }

  get owners(): Array<Address> {
    return this._event.parameters[6].value.toAddressArray();
  }

  get safeAddress(): Address {
    return this._event.parameters[7].value.toAddress();
  }
}

export class SignatureAdded extends ethereum.Event {
  get params(): SignatureAdded__Params {
    return new SignatureAdded__Params(this);
  }
}

export class SignatureAdded__Params {
  _event: SignatureAdded;

  constructor(event: SignatureAdded) {
    this._event = event;
  }

  get appId(): string {
    return this._event.parameters[0].value.toString();
  }

  get receipeId(): string {
    return this._event.parameters[1].value.toString();
  }

  get signId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get signature(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class SignContract__signContractsResult {
  value0: string;
  value1: Address;
  value2: BigInt;
  value3: boolean;
  value4: string;

  constructor(
    value0: string,
    value1: Address,
    value2: BigInt,
    value3: boolean,
    value4: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    return map;
  }

  getSignName(): string {
    return this.value0;
  }

  getSafeAddress(): Address {
    return this.value1;
  }

  getRequired(): BigInt {
    return this.value2;
  }

  getApproveStatus(): boolean {
    return this.value3;
  }

  getFileUri(): string {
    return this.value4;
  }
}

export class SignContract extends ethereum.SmartContract {
  static bind(address: Address): SignContract {
    return new SignContract("SignContract", address);
  }

  getApproveStatus(_signId: BigInt): boolean {
    let result = super.call(
      "getApproveStatus",
      "getApproveStatus(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_signId)]
    );

    return result[0].toBoolean();
  }

  try_getApproveStatus(_signId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getApproveStatus",
      "getApproveStatus(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_signId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOwner(param0: BigInt, param1: Address): boolean {
    let result = super.call("isOwner", "isOwner(uint256,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0),
      ethereum.Value.fromAddress(param1)
    ]);

    return result[0].toBoolean();
  }

  try_isOwner(param0: BigInt, param1: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isOwner", "isOwner(uint256,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0),
      ethereum.Value.fromAddress(param1)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  signContracts(param0: BigInt): SignContract__signContractsResult {
    let result = super.call(
      "signContracts",
      "signContracts(uint256):(string,address,uint256,bool,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new SignContract__signContractsResult(
      result[0].toString(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBoolean(),
      result[4].toString()
    );
  }

  try_signContracts(
    param0: BigInt
  ): ethereum.CallResult<SignContract__signContractsResult> {
    let result = super.tryCall(
      "signContracts",
      "signContracts(uint256):(string,address,uint256,bool,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SignContract__signContractsResult(
        value[0].toString(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBoolean(),
        value[4].toString()
      )
    );
  }
}

export class AddSignatureCall extends ethereum.Call {
  get inputs(): AddSignatureCall__Inputs {
    return new AddSignatureCall__Inputs(this);
  }

  get outputs(): AddSignatureCall__Outputs {
    return new AddSignatureCall__Outputs(this);
  }
}

export class AddSignatureCall__Inputs {
  _call: AddSignatureCall;

  constructor(call: AddSignatureCall) {
    this._call = call;
  }

  get _appId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _receipeId(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _signId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _signature(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class AddSignatureCall__Outputs {
  _call: AddSignatureCall;

  constructor(call: AddSignatureCall) {
    this._call = call;
  }
}

export class SetUpSignContractCall extends ethereum.Call {
  get inputs(): SetUpSignContractCall__Inputs {
    return new SetUpSignContractCall__Inputs(this);
  }

  get outputs(): SetUpSignContractCall__Outputs {
    return new SetUpSignContractCall__Outputs(this);
  }
}

export class SetUpSignContractCall__Inputs {
  _call: SetUpSignContractCall;

  constructor(call: SetUpSignContractCall) {
    this._call = call;
  }

  get _appId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _receipeId(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _initName(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _initRequired(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _initUri(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _owners(): Array<Address> {
    return this._call.inputValues[5].value.toAddressArray();
  }

  get _safeAddress(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class SetUpSignContractCall__Outputs {
  _call: SetUpSignContractCall;

  constructor(call: SetUpSignContractCall) {
    this._call = call;
  }
}
